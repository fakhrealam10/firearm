{
  "version": 3,
  "sources": ["../../grapesjs-navbar/dist/webpack:/grapesjs-navbar/webpack/universalModuleDefinition", "../../grapesjs-navbar/dist/webpack:/grapesjs-navbar/webpack/bootstrap", "../../grapesjs-navbar/dist/webpack:/grapesjs-navbar/webpack/runtime/define property getters", "../../grapesjs-navbar/dist/webpack:/grapesjs-navbar/webpack/runtime/hasOwnProperty shorthand", "../../grapesjs-navbar/dist/webpack:/grapesjs-navbar/webpack/runtime/make namespace object", "../../grapesjs-navbar/dist/webpack:/grapesjs-navbar/src/blocks.ts", "../../grapesjs-navbar/dist/webpack:/grapesjs-navbar/src/components.ts", "../../grapesjs-navbar/dist/webpack:/grapesjs-navbar/src/index.ts"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"grapesjs-navbar\"] = factory();\n\telse\n\t\troot[\"grapesjs-navbar\"] = factory();\n})(typeof globalThis !== 'undefined' ? globalThis : (typeof window !== 'undefined' ? window : this), () => {\nreturn ", "// The require scope\nvar __webpack_require__ = {};\n\n", "// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};", "__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))", "// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};", "import type { Editor } from 'grapesjs';\nimport { RequiredPluginOptions } from '.';\n\nexport default (editor: Editor, opts: RequiredPluginOptions) => {\n  const { block, label, id } = opts;\n\n  if (block) {\n    editor.Blocks.add(id, {\n      media: `<svg viewBox=\"0 0 24 24\">\n        <path d=\"M22 9c0-.6-.5-1-1.25-1H3.25C2.5 8 2 8.4 2 9v6c0 .6.5 1 1.25 1h17.5c.75 0 1.25-.4 1.25-1V9Zm-1 6H3V9h18v6Z\"/><path d=\"M15 10h5v1h-5zM15 13h5v1h-5zM15 11.5h5v1h-5z\"/>\n      </svg>`,\n      label,\n      category: 'Extra',\n      select: true,\n      content: { type: id },\n      ...block,\n    });\n  }\n}\n", "import type { Editor } from 'grapesjs';\nimport { RequiredPluginOptions } from '.';\n\nexport default (editor: Editor, opts: RequiredPluginOptions) => {\n  const { Components } = editor;\n  const { id, label } = opts;\n\n  const navbarPfx = opts.classPrefix;\n  const idContainer = `${id}-container`;\n  const idNavMenu = `${id}-nav-menu`;\n  const idNavMenuLink = `${id}-nav-menu-link`;\n  const idBurgerMenu = `${id}-burger-menu`;\n  const idBurgerMenuLine = `${id}-burger-menu-line`;\n\n  Components.addType(id, {\n    model: {\n      defaults: {\n        droppable: false,\n        name: label,\n        attributes: { class: navbarPfx },\n        components: { type: idContainer },\n        styles: (opts.style || `\n          .${navbarPfx} {\n            background-color: #222;\n            color: #ddd;\n            min-height: 50px;\n            width: 100%;\n          }\n\n          .${navbarPfx}-container {\n            max-width: 950px;\n            margin: 0 auto;\n            width: 95%;\n          }\n\n          .${navbarPfx}-items-c {\n            display: inline-block;\n            float: right;\n          }\n\n          .${navbarPfx}-container::after {\n            content: \"\";\n            clear: both;\n            display: block;\n          }\n\n          .${navbarPfx}-brand {\n            vertical-align: top;\n            display: inline-block;\n            padding: 5px;\n            min-height: 50px;\n            min-width: 50px;\n            color: inherit;\n            text-decoration: none;\n          }\n\n          .${navbarPfx}-menu {\n            padding: 10px 0;\n            display: block;\n            float: right;\n            margin: 0;\n          }\n\n          .${navbarPfx}-menu-link {\n            margin: 0;\n            color: inherit;\n            text-decoration: none;\n            display: inline-block;\n            padding: 10px 15px;\n          }\n\n          .${navbarPfx}-burger {\n            margin: 10px 0;\n            width: 45px;\n            padding: 5px 10px;\n            display: none;\n            float: right;\n            cursor: pointer;\n          }\n\n          .${navbarPfx}-burger-line {\n            padding: 1px;\n            background-color: white;\n            margin: 5px 0;\n          }\n\n          @media (max-width: 768px) {\n            .${navbarPfx}-items-c {\n              display: none;\n              width: 100%;\n            }\n\n            .${navbarPfx}-burger {\n              display: block;\n            }\n\n            .${navbarPfx}-menu {\n              width: 100%;\n            }\n\n            .${navbarPfx}-menu-link {\n              display: block;\n            }\n          }\n        `) + opts.styleAdditional,\n      },\n    }\n  });\n\n  Components.addType(idContainer, {\n    model: {\n      defaults: {\n        attributes: { class: `${navbarPfx}-container`, 'data-gjs': 'navbar' },\n        name: 'Navbar Container',\n        droppable: false,\n        draggable: false,\n        removable: false,\n        copyable: false,\n        highlightable: false,\n        components: [\n          {\n            type: 'link',\n            attributes: { class: `${navbarPfx}-brand`, href: '/' },\n          },\n          { type: idBurgerMenu },\n          {\n            attributes: { class: `${navbarPfx}-items-c`, 'data-gjs': 'navbar-items' },\n            components: { type: idNavMenu },\n          }\n        ]\n      }\n    }\n  });\n\n  Components.addType(idNavMenu, {\n    model: {\n      defaults: {\n        name: 'Navbar Menu',\n        tagName: 'nav',\n        attributes: { class: `${navbarPfx}-menu` },\n        components: [\n          { type: idNavMenuLink, components: 'Home' },\n          { type: idNavMenuLink, components: 'About' },\n          { type: idNavMenuLink, components: 'Contact' },\n        ]\n      }\n    }\n  });\n\n  Components.addType(idNavMenuLink, {\n    extend: 'link',\n    model: {\n      defaults: {\n        name: 'Menu link',\n        draggable: `[data-gjs-type=\"${idNavMenu}\"]`,\n        attributes: { class: `${navbarPfx}-menu-link` },\n      }\n    }\n  });\n\n  Components.addType(idBurgerMenu, {\n    model: {\n      defaults: {\n        name: 'Burger',\n        draggable: false,\n        droppable: false,\n        copyable: false,\n        removable: false,\n        script: function () {\n          // @ts-ignore\n          const currentEl = this as HTMLElement;\n          const stringCollapse = 'gjs-collapse';\n          const clickEvent = 'click';\n          const transitProp = 'max-height';\n          let transEndAdded: any;\n          let isAnimating = 0;\n\n          const getTransitionEvent = function() {\n            const el = document.createElement('void');\n            const transitions: Record<string, string> = {\n              'transition': 'transitionend',\n              'OTransition': 'oTransitionEnd',\n              'MozTransition': 'transitionend',\n              'WebkitTransition': 'webkitTransitionEnd'\n            }\n\n            for (let t in transitions) {\n              // @ts-ignore\n              if (el.style[t] !== undefined){\n                return transitions[t];\n              }\n            }\n          }\n\n          const transitEndEvent = getTransitionEvent();\n\n          var getElHeight = function(el: HTMLElement): number {\n            const style = window.getComputedStyle(el);\n            const elDisplay = style.display;\n            // @ts-ignore\n            const elMaxHeight = parseInt(style[transitProp]);\n\n            if (elDisplay !== 'none' && elMaxHeight !== 0) {\n              return el.offsetHeight;\n            }\n\n            el.style.height = 'auto';\n            el.style.display = 'block';\n            el.style.position = 'absolute';\n            el.style.visibility = 'hidden';\n            const height = el.offsetHeight;\n            el.style.height = '';\n            el.style.display = '';\n            el.style.position = '';\n            el.style.visibility = '';\n\n            return height;\n          };\n\n          var toggleSlide = function(el: HTMLElement) {\n            isAnimating = 1;\n            var elMaxHeight = getElHeight(el);\n            var elStyle: any = el.style;\n            elStyle.display = 'block';\n            elStyle.transition = `${transitProp} 0.25s ease-in-out`;\n            elStyle.overflowY = 'hidden';\n\n            if (elStyle[transitProp] == '') {\n              elStyle[transitProp] = 0;\n            }\n\n            if (parseInt(elStyle[transitProp]) == 0) {\n              elStyle[transitProp] = '0';\n              setTimeout(function() {\n                  elStyle[transitProp] = elMaxHeight + 'px';\n              }, 10);\n            } else {\n              elStyle[transitProp] = '0';\n            }\n          }\n\n          const toggle = function(ev: Event) {\n            ev.preventDefault();\n            if (isAnimating) return;\n\n            const navParent = currentEl.closest(`[data-gjs=navbar]`);\n            const navItems = navParent?.querySelector(`[data-gjs=navbar-items]`) as HTMLElement;\n            navItems && toggleSlide(navItems);\n\n            if (!transEndAdded) {\n              // @ts-ignore\n              navItems?.addEventListener(transitEndEvent, function() {\n                isAnimating = 0;\n                const itemsStyle: any = navItems.style;\n                if (parseInt(itemsStyle[transitProp]) == 0) {\n                  itemsStyle.display = '';\n                  itemsStyle[transitProp] = '';\n                }\n              });\n              transEndAdded = 1;\n            }\n          };\n\n          if ( !(stringCollapse in currentEl) ) {\n            currentEl.addEventListener(clickEvent, toggle);\n          }\n\n          // @ts-ignore\n          currentEl[stringCollapse] = 1;\n        },\n        attributes: { class: `${navbarPfx}-burger` },\n        components: [\n          { type: idBurgerMenuLine },\n          { type: idBurgerMenuLine },\n          { type: idBurgerMenuLine },\n        ]\n      },\n    },\n  });\n\n  Components.addType(idBurgerMenuLine, {\n    model: {\n      defaults: {\n        name: 'Burger Line',\n        droppable: false,\n        draggable: false,\n        highlightable: false,\n        attributes: { class: `${navbarPfx}-burger-line` },\n      },\n    },\n  });\n}\n", "import type { BlockProperties, Plugin } from 'grapesjs';\nimport loadBlocks from './blocks';\nimport loadComponents from './components';\n\nexport type PluginOptions = {\n  /**\n   * The ID used to create the block and component\n   * @default 'navbar'\n   */\n   id?: string;\n\n   /**\n   * The label used for the block and the component.\n   * @default 'Navbar'\n   */\n  label?: string,\n\n  /**\n   * Object to extend the default block. Pass a falsy value to avoid adding the block.\n   * @example\n   * { category: 'Extra', ... }\n   */\n  block?: Partial<BlockProperties>;\n\n  /**\n   * Custom CSS styles for the component. This will replace the default one.\n   * @default ''\n   */\n  style?: string,\n\n  /**\n   * Additional CSS styles for the component. These will be appended to the default one.\n   * @default ''\n   */\n  styleAdditional?: string,\n\n  /**\n   * Component class prefix.\n   * @default 'navbar'\n   */\n  classPrefix?: string,\n};\n\nexport type RequiredPluginOptions = Required<PluginOptions>;\n\nconst plugin: Plugin<PluginOptions> = (editor, opts = {}) => {\n  const options: RequiredPluginOptions = {\n    id: 'navbar',\n    label: 'Navbar',\n    block: {},\n    style: '',\n    styleAdditional: '',\n    classPrefix: 'navbar',\n    ...opts,\n  };\n\n  loadBlocks(editor, options);\n  loadComponents(editor, options);\n};\n\nexport default plugin;"],
  "mappings": "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",
  "names": ["root", "factory", "exports", "module", "define", "amd", "globalThis", "window", "this", "__webpack_require__", "definition", "key", "o", "Object", "defineProperty", "enumerable", "get", "obj", "prop", "prototype", "hasOwnProperty", "call", "Symbol", "toStringTag", "value", "n", "t", "e", "a", "editor", "opts", "Components", "id", "label", "navbarPfx", "classPrefix", "idContainer", "idNavMenu", "idNavMenuLink", "idBurgerMenu", "idBurgerMenuLine", "addType", "model", "defaults", "droppable", "name", "attributes", "class", "components", "type", "styles", "style", "styleAdditional", "draggable", "removable", "copyable", "highlightable", "href", "tagName", "extend", "script", "transEndAdded", "currentEl", "stringCollapse", "transitProp", "isAnimating", "transitEndEvent", "el", "document", "createElement", "transitions", "getTransitionEvent", "toggleSlide", "elMaxHeight", "getComputedStyle", "elDisplay", "display", "parseInt", "offsetHeight", "height", "position", "visibility", "elStyle", "transition", "overflowY", "setTimeout", "addEventListener", "ev", "preventDefault", "navParent", "closest", "navItems", "querySelector", "itemsStyle", "options", "block", "Blocks", "add", "media", "category", "select", "content"]
}
