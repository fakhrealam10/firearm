{
  "version": 3,
  "sources": ["../../grapesjs-plugin-forms/dist/webpack:/grapesjs-plugin-forms/webpack/universalModuleDefinition", "../../grapesjs-plugin-forms/dist/webpack:/grapesjs-plugin-forms/webpack/bootstrap", "../../grapesjs-plugin-forms/dist/webpack:/grapesjs-plugin-forms/webpack/runtime/define property getters", "../../grapesjs-plugin-forms/dist/webpack:/grapesjs-plugin-forms/webpack/runtime/hasOwnProperty shorthand", "../../grapesjs-plugin-forms/dist/webpack:/grapesjs-plugin-forms/webpack/runtime/make namespace object", "../../grapesjs-plugin-forms/dist/webpack:/grapesjs-plugin-forms/src/components.ts", "../../grapesjs-plugin-forms/dist/webpack:/grapesjs-plugin-forms/src/index.ts", "../../grapesjs-plugin-forms/dist/webpack:/grapesjs-plugin-forms/src/traits.ts", "../../grapesjs-plugin-forms/dist/webpack:/grapesjs-plugin-forms/src/blocks.ts"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"grapesjs-plugin-forms\"] = factory();\n\telse\n\t\troot[\"grapesjs-plugin-forms\"] = factory();\n})(typeof globalThis !== 'undefined' ? globalThis : (typeof window !== 'undefined' ? window : this), () => {\nreturn ", "// The require scope\nvar __webpack_require__ = {};\n\n", "// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};", "__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))", "// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};", "import type { Editor } from 'grapesjs';\n\nexport const typeForm = 'form';\nexport const typeInput = 'input';\nexport const typeTextarea = 'textarea';\nexport const typeSelect = 'select';\nexport const typeCheckbox = 'checkbox';\nexport const typeRadio = 'radio';\nexport const typeButton = 'button';\nexport const typeLabel = 'label';\nexport const typeOption = 'option';\n\nexport default function(editor: Editor) {\n  const { Components } = editor;\n\n  const idTrait = {\n    name: 'id',\n  };\n\n  const forTrait = {\n    name: 'for',\n  };\n\n  const nameTrait = {\n    name: 'name',\n  };\n\n  const placeholderTrait = {\n    name: 'placeholder',\n  };\n\n  const valueTrait = {\n    name: 'value',\n  };\n\n  const requiredTrait = {\n    type: 'checkbox',\n    name: 'required',\n  };\n\n  const checkedTrait = {\n    type: 'checkbox',\n    name: 'checked',\n  };\n\n  const createOption = (value: string, content: string) => {\n    return { type: typeOption, content, attributes: { value } };\n  };\n\n  const checkIfInPreview = (ev: Event) => {\n    if (!editor.Commands.isActive('preview')) {\n      ev.preventDefault();\n    }\n  };\n\n  Components.addType(typeForm, {\n    isComponent: el => el.tagName == 'FORM',\n\n    model: {\n      defaults: {\n        tagName: 'form',\n        droppable: ':not(form)',\n        draggable: ':not(form)',\n        attributes: { method: 'get' },\n        traits: [{\n          type: 'select',\n          name: 'method',\n          options: [\n            {value: 'get', name: 'GET'},\n            {value: 'post', name: 'POST'},\n          ],\n        }, {\n          name: 'action',\n        }],\n      },\n    },\n\n    view: {\n      events: {\n        // The submit of the form might redirect the user from the editor so\n        // we should always prevent the default here.\n        submit: (e: Event) => e.preventDefault(),\n      } as any\n    },\n  });\n\n\n\n\n\n  // INPUT\n  Components.addType(typeInput, {\n    isComponent: el => el.tagName == 'INPUT',\n\n    model: {\n      defaults: {\n        tagName: 'input',\n        droppable: false,\n        highlightable: false,\n        attributes: { type: 'text' },\n        traits: [\n          nameTrait,\n          placeholderTrait,\n          {\n            type: 'select',\n            name: 'type',\n            options: [\n              { value: 'text' },\n              { value: 'email' },\n              { value: 'password' },\n              { value: 'number' },\n            ]\n          },\n          requiredTrait\n        ],\n      },\n    },\n\n    extendFnView: ['updateAttributes'],\n    view: {\n      updateAttributes() {\n        this.el.setAttribute('autocomplete', 'off');\n      },\n    }\n  });\n\n\n\n\n\n  // TEXTAREA\n  Components.addType(typeTextarea, {\n    extend: typeInput,\n    isComponent: el => el.tagName == 'TEXTAREA',\n\n    model: {\n      defaults: {\n        tagName: 'textarea',\n        attributes: {},\n        traits: [\n          nameTrait,\n          placeholderTrait,\n          requiredTrait\n        ]\n      },\n    },\n  });\n\n\n\n\n\n  // OPTION\n  Components.addType(typeOption, {\n    isComponent: el => el.tagName == 'OPTION',\n\n    model: {\n      defaults: {\n        tagName: 'option',\n        layerable: false,\n        droppable: false,\n        draggable: false,\n        highlightable: false,\n      },\n    },\n  });\n\n\n\n\n\n  // SELECT\n  Components.addType(typeSelect, {\n    isComponent: el => el.tagName == 'SELECT',\n\n    model: {\n      defaults: {\n        tagName: 'select',\n        droppable: false,\n        highlightable: false,\n        components: [\n          createOption('opt1', 'Option 1'),\n          createOption('opt2', 'Option 2'),\n        ],\n        traits: [\n          nameTrait,\n          {\n            name: 'options',\n            type: 'select-options'\n          },\n          requiredTrait\n        ],\n      },\n    },\n\n    view: {\n      events: {\n        mousedown: checkIfInPreview,\n      } as any,\n    },\n  });\n\n\n\n\n\n  // CHECKBOX\n  Components.addType(typeCheckbox, {\n    extend: typeInput,\n    isComponent: (el) => el.tagName == 'INPUT' && (el as HTMLInputElement).type == 'checkbox',\n\n    model: {\n      defaults: {\n        copyable: false,\n        attributes: { type: 'checkbox' },\n        traits: [\n          idTrait,\n          nameTrait,\n          valueTrait,\n          requiredTrait,\n          checkedTrait\n        ],\n      },\n    },\n\n    view: {\n      events: {\n        click: checkIfInPreview,\n      } as any,\n\n      init() {\n        this.listenTo(this.model, 'change:attributes:checked', this.handleChecked);\n      },\n\n      handleChecked() {\n        (this.el as any).checked = !!this.model.get('attributes')?.checked;\n      },\n    },\n  });\n\n\n\n\n\n  // RADIO\n  Components.addType(typeRadio, {\n    extend: typeCheckbox,\n    isComponent: el => el.tagName == 'INPUT' && (el as HTMLInputElement).type == 'radio',\n\n    model: {\n      defaults: {\n        attributes: { type: 'radio' },\n      },\n    },\n  });\n\n\n\n\n\n  Components.addType(typeButton, {\n    extend: typeInput,\n    isComponent: el => el.tagName == 'BUTTON',\n\n    model: {\n      defaults: {\n        tagName: 'button',\n        attributes: { type: 'button' },\n        text: 'Send',\n        traits: [\n          {\n            name: 'text',\n            changeProp: true,\n          }, {\n            type: 'select',\n            name: 'type',\n            options: [\n              { value: 'button' },\n              { value: 'submit' },\n              { value: 'reset' },\n            ]\n        }]\n      },\n\n      init() {\n        const comps = this.components();\n        const tChild =  comps.length === 1 && comps.models[0];\n        const chCnt = (tChild && tChild.is('textnode') && tChild.get('content')) || '';\n        const text = chCnt || this.get('text');\n        this.set('text', text);\n        this.on('change:text', this.__onTextChange);\n        (text !== chCnt) && this.__onTextChange();\n      },\n\n      __onTextChange() {\n        this.components(this.get('text'));\n      },\n    },\n\n    view: {\n      events: {\n        click: checkIfInPreview,\n      } as any,\n    },\n  });\n\n\n\n\n\n  // LABEL\n  Components.addType(typeLabel, {\n    extend: 'text',\n    isComponent: el => el.tagName == 'LABEL',\n\n    model: {\n      defaults: {\n        tagName: 'label',\n        components: 'Label' as any,\n        traits: [forTrait],\n      },\n    },\n  });\n}\n", "import type { BlockProperties, Plugin } from 'grapesjs';\nimport loadBlocks from './blocks';\nimport loadComponents from './components';\nimport loadTraits from './traits';\n\nexport type PluginOptions = {\n  /**\n   * Which blocks to add.\n   * @default ['form', 'input', 'textarea', 'select', 'button', 'label', 'checkbox', 'radio']\n   */\n   blocks?: string[];\n\n  /**\n   * Category name for blocks.\n   * @default 'Forms'\n   */\n   category?: BlockProperties[\"category\"];\n\n  /**\n   * Add custom block options, based on block id.\n   * @default (blockId) => ({})\n   * @example (blockId) => blockId === 'input' ? { attributes: {...} } : {};\n   */\n   block?: (blockId: string) => ({});\n};\n\nconst plugin: Plugin<PluginOptions> = (editor, opts = {}) => {\n  const config: Required<PluginOptions> = {\n    blocks: ['form', 'input', 'textarea', 'select', 'button', 'label', 'checkbox', 'radio'],\n    category: { id: 'forms', label: 'Forms' },\n    block: () => ({}),\n    ...opts\n  };\n\n  loadComponents(editor);\n  loadTraits(editor);\n  loadBlocks(editor, config);\n};\n\nexport default plugin;\n", "import type { Editor } from 'grapesjs';\nimport { typeOption } from './components';\n\nexport default function (editor: Editor) {\n  const trm = editor.TraitManager;\n\n  trm.addType('select-options', {\n    events:{\n      keyup: 'onChange',\n    },\n\n    onValueChange() {\n      const { model, target } = this;\n      const optionsStr = model.get('value').trim();\n      const options = optionsStr.split('\\n');\n      const optComps = [];\n\n      for (let i = 0; i < options.length; i++) {\n        const optionStr = options[i];\n        const option = optionStr.split('::');\n        optComps.push({\n          type: typeOption,\n          components: option[1] || option[0],\n          attributes: { value: option[0] },\n        });\n      }\n\n      target.components().reset(optComps);\n      target.view?.render();\n    },\n\n    getInputEl() {\n      if (!this.$input) {\n        const optionsArr = [];\n        const options = this.target.components();\n\n        for (let i = 0; i < options.length; i++) {\n          const option = options.models[i];\n          const optAttr = option.get('attributes');\n          const optValue = optAttr?.value || '';\n          const optTxtNode = option.components().models[0];\n          const optLabel = optTxtNode && optTxtNode.get('content') || '';\n          optionsArr.push(`${optValue}::${optLabel}`);\n        }\n\n        const el = document.createElement('textarea');\n        el.value = optionsArr.join(\"\\n\");\n        this.$input = el as any;\n      }\n\n      return this.$input;\n  \t},\n  });\n}\n", "import type { BlockProperties, Editor } from 'grapesjs';\nimport { PluginOptions } from '.';\nimport {\n  typeButton,\n  typeCheckbox,\n  typeForm,\n  typeInput,\n  typeLabel,\n  typeRadio,\n  typeSelect,\n  typeTextarea,\n} from './components';\n\nexport default function (editor: Editor, opt: Required<PluginOptions>) {\n  const opts = opt;\n  const bm = editor.BlockManager;\n  const addBlock = (id: string, def: BlockProperties) => {\n    opts.blocks?.indexOf(id)! >= 0 && bm.add(id, {\n      ...def,\n      category: opts.category,\n      select: true,\n      ...opt.block(id),\n    });\n  }\n\n  addBlock(typeForm, {\n    label: 'Form',\n    media: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M22 5.5c0-.3-.5-.5-1.3-.5H3.4c-.8 0-1.3.2-1.3.5v3c0 .3.5.5 1.3.5h17.4c.8 0 1.3-.2 1.3-.5v-3zM21 8H3V6h18v2zM22 10.5c0-.3-.5-.5-1.3-.5H3.4c-.8 0-1.3.2-1.3.5v3c0 .3.5.5 1.3.5h17.4c.8 0 1.3-.2 1.3-.5v-3zM21 13H3v-2h18v2z\"/><rect width=\"10\" height=\"3\" x=\"2\" y=\"15\" rx=\".5\"/></svg>',\n    content: {\n      type: typeForm,\n      components: [\n        {\n          components: [\n            { type: typeLabel, components: 'Name' },\n            { type: typeInput },\n          ]\n        }, {\n          components: [\n            { type: typeLabel, components: 'Email' },\n            { type: typeInput, attributes: { type: 'email' } },\n          ]\n        }, {\n          components: [\n            { type: typeLabel, components: 'Gender' },\n            { type: typeCheckbox, attributes: { value: 'M' } },\n            { type: typeLabel, components: 'M' },\n            { type: typeCheckbox, attributes: { value: 'F' } },\n            { type: typeLabel, components: 'F' },\n          ]\n        }, {\n          components: [\n            { type: typeLabel, components: 'Message' },\n            { type: typeTextarea },\n          ]\n        }, {\n          components: [{ type: typeButton }]\n        },\n      ]\n    }\n  });\n\n  addBlock(typeInput, {\n    label: 'Input',\n    media: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M22 9c0-.6-.5-1-1.3-1H3.4C2.5 8 2 8.4 2 9v6c0 .6.5 1 1.3 1h17.4c.8 0 1.3-.4 1.3-1V9zm-1 6H3V9h18v6z\"/><path d=\"M4 10h1v4H4z\"/></svg>',\n    content: { type: typeInput },\n  });\n\n  addBlock(typeTextarea, {\n    label: 'Textarea',\n    media: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M22 7.5c0-.9-.5-1.5-1.3-1.5H3.4C2.5 6 2 6.6 2 7.5v9c0 .9.5 1.5 1.3 1.5h17.4c.8 0 1.3-.6 1.3-1.5v-9zM21 17H3V7h18v10z\"/><path d=\"M4 8h1v4H4zM19 7h1v10h-1zM20 8h1v1h-1zM20 15h1v1h-1z\"/></svg>',\n    content: { type: typeTextarea },\n  });\n\n  addBlock(typeSelect, {\n    label: 'Select',\n    media: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M22 9c0-.6-.5-1-1.3-1H3.4C2.5 8 2 8.4 2 9v6c0 .6.5 1 1.3 1h17.4c.8 0 1.3-.4 1.3-1V9zm-1 6H3V9h18v6z\"/><path d=\"M18.5 13l1.5-2h-3zM4 11.5h11v1H4z\"/></svg>',\n    content: { type: typeSelect },\n  });\n\n  addBlock(typeButton, {\n    label: 'Button',\n    media: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M22 9c0-.6-.5-1-1.3-1H3.4C2.5 8 2 8.4 2 9v6c0 .6.5 1 1.3 1h17.4c.8 0 1.3-.4 1.3-1V9zm-1 6H3V9h18v6z\"/><path d=\"M4 11.5h16v1H4z\"/></svg>',\n    content: { type: typeButton },\n  });\n\n  addBlock(typeLabel, {\n    label: 'Label',\n    media: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M22 11.9c0-.6-.5-.9-1.3-.9H3.4c-.8 0-1.3.3-1.3.9V17c0 .5.5.9 1.3.9h17.4c.8 0 1.3-.4 1.3-.9V12zM21 17H3v-5h18v5z\"/><rect width=\"14\" height=\"5\" x=\"2\" y=\"5\" rx=\".5\"/><path d=\"M4 13h1v3H4z\"/></svg>',\n    content: { type: typeLabel },\n  });\n\n  addBlock(typeCheckbox, {\n    label: 'Checkbox',\n    media: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M10 17l-5-5 1.41-1.42L10 14.17l7.59-7.59L19 8m0-5H5c-1.11 0-2 .89-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5a2 2 0 0 0-2-2z\"></path></svg>',\n    content: { type: typeCheckbox },\n  });\n\n  addBlock(typeRadio, {\n    label: 'Radio',\n    media: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8m0-18C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 5c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5z\"></path></svg>',\n    content: { type: typeRadio },\n  });\n}\n"],
  "mappings": "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",
  "names": ["root", "factory", "exports", "module", "define", "amd", "globalThis", "window", "this", "__webpack_require__", "definition", "key", "o", "Object", "defineProperty", "enumerable", "get", "obj", "prop", "prototype", "hasOwnProperty", "call", "Symbol", "toStringTag", "value", "typeForm", "typeInput", "typeTextarea", "typeSelect", "typeCheckbox", "typeRadio", "typeButton", "typeLabel", "typeOption", "e", "t", "n", "a", "editor", "opts", "config", "blocks", "category", "id", "label", "block", "Components", "nameTrait", "name", "placeholderTrait", "requiredTrait", "type", "createOption", "content", "attributes", "checkIfInPreview", "ev", "Commands", "isActive", "preventDefault", "addType", "isComponent", "el", "tagName", "model", "defaults", "droppable", "draggable", "method", "traits", "options", "view", "events", "submit", "highlightable", "extendFnView", "updateAttributes", "setAttribute", "extend", "layerable", "components", "mousedown", "copyable", "click", "init", "listenTo", "handleChecked", "checked", "text", "changeProp", "comps", "tChild", "length", "models", "chCnt", "is", "set", "on", "__onTextChange", "TraitManager", "keyup", "onValueChange", "target", "trim", "split", "optComps", "i", "option", "push", "reset", "render", "getInputEl", "$input", "optionsArr", "optAttr", "optValue", "optTxtNode", "optLabel", "document", "createElement", "join", "opt", "bm", "BlockManager", "addBlock", "def", "indexOf", "add", "select", "media"]
}
